{"version":3,"file":"main.js","sources":["main.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n  const burger = document.querySelector('.header-burger');\n  const list = document.querySelector('.header-list');\n\n  if (burger) {\n    burger.addEventListener('click', () => {\n      burger.classList.toggle('active');\n      list.classList.toggle('active');\n    });\n  }\n});\n\nlet currentInput = null;\nlet isKeyboardVisible = false; \n\ndocument.querySelectorAll('input, textarea').forEach(input => {\n  input.addEventListener('click', function () {\n    currentInput = this;\n    if (isKeyboardVisible) {\n        openKeyboardForInput();\n    }\n  });\n});\n\ndocument.querySelectorAll('.virtual-block').forEach(element => {\n  element.addEventListener('click', () => {\n    isKeyboardVisible = true;\n    if (currentInput) {\n      openKeyboardForInput();\n    }\n  });\n});\n\nfunction openKeyboardForInput() {\n  const keyboard = document.querySelector('.keyboard');\n\n  if (currentInput) {\n    const inputRect = currentInput.getBoundingClientRect();\n    \n    const keyboardHeight = keyboard?.offsetHeight; \n    const viewportHeight = window.innerHeight; \n\n    const scrollX = window.scrollX || window.pageXOffset;\n    const scrollY = window.scrollY || window.pageYOffset;\n    const x = inputRect.left + scrollX;\n    const y = inputRect.top + scrollY;\n    const heightInput = currentInput.offsetHeight;\n\n    keyboard.style.left = `${x}px`;\n    keyboard.style.top = `${y + heightInput}px`;\n    keyboard.style.display = 'block'; \n    isKeyboardVisible = true; \n  }\n}\n\ndocument.addEventListener('click', (event) => {\n  const keyboard = document.querySelector('.keyboard');\n  const virtualBlocks = document.querySelectorAll('.virtual-block'); // Получаем все .virtual-block\n  const inputElements = document.querySelectorAll('input, textarea');\n\n  // Проверяем, что клик не был сделан по клавиатуре, ни одному из .virtual-block и ни одному из input/textarea\n  const clickedOutside = \n    !keyboard.contains(event.target) && \n    !Array.from(virtualBlocks).some(block => block.contains(event.target)) && \n    !Array.from(inputElements).includes(event.target);\n\n  if (clickedOutside) {\n    keyboard.style.display = 'none';\n    isKeyboardVisible = false;\n  }\n});\n"],"names":["document","addEventListener","burger","querySelector","list","classList","toggle","let","currentInput","isKeyboardVisible","openKeyboardForInput","x","y","heightInput","keyboard","inputRect","getBoundingClientRect","offsetHeight","window","innerHeight","scrollX","pageXOffset","scrollY","pageYOffset","left","top","style","display","querySelectorAll","forEach","input","this","element","virtualBlocks","inputElements","contains","event","target","Array","from","some","block","includes"],"mappings":"AAAAA,SAASC,iBAAiB,mBAAoB,KAC5C,MAAMC,EAASF,SAASG,cAAc,gBAAgB,EAChDC,EAAOJ,SAASG,cAAc,cAAc,EAE9CD,GACFA,EAAOD,iBAAiB,QAAS,KAC/BC,EAAOG,UAAUC,OAAO,QAAQ,EAChCF,EAAKC,UAAUC,OAAO,QAAQ,CAChC,CAAC,CAEL,CAAC,EAEDC,IAAIC,aAAe,KACfC,kBAAoB,CAAA,EAoBxB,SAASC,uBACP,IAUQC,EACAC,EACAC,EAZFC,EAAWd,SAASG,cAAc,WAAW,EAE/CK,eACIO,EAAYP,aAAaQ,sBAAsB,EAE9BF,GAAUG,aACVC,OAAOC,YAExBC,EAAUF,OAAOE,SAAWF,OAAOG,YACnCC,EAAUJ,OAAOI,SAAWJ,OAAOK,YACnCZ,EAAII,EAAUS,KAAOJ,EACrBR,EAAIG,EAAUU,IAAMH,EACpBT,EAAcL,aAAaS,aAEjCH,EAASY,MAAMF,KAAUb,EAAH,KACtBG,EAASY,MAAMD,IAASb,EAAIC,EAAP,KACrBC,EAASY,MAAMC,QAAU,QACzBlB,kBAAoB,CAAA,EAExB,CAtCAT,SAAS4B,iBAAiB,iBAAiB,EAAEC,QAAQC,IACnDA,EAAM7B,iBAAiB,QAAS,WAC9BO,aAAeuB,KACXtB,mBACAC,qBAAqB,CAE3B,CAAC,CACH,CAAC,EAEDV,SAAS4B,iBAAiB,gBAAgB,EAAEC,QAAQG,IAClDA,EAAQ/B,iBAAiB,QAAS,KAChCQ,kBAAoB,CAAA,EAChBD,cACFE,qBAAqB,CAEzB,CAAC,CACH,CAAC,EAwBDV,SAASC,iBAAiB,QAAS,IACjC,IAAMa,EAAWd,SAASG,cAAc,WAAW,EAC7C8B,EAAgBjC,SAAS4B,iBAAiB,gBAAgB,EAC1DM,EAAgBlC,SAAS4B,iBAAiB,iBAAiB,EAI9Dd,EAASqB,SAASC,EAAMC,MAAM,GAC9BC,MAAMC,KAAKN,CAAa,EAAEO,KAAKC,GAASA,EAAMN,SAASC,EAAMC,MAAM,CAAC,GACpEC,MAAMC,KAAKL,CAAa,EAAEQ,SAASN,EAAMC,MAAM,IAGhDvB,EAASY,MAAMC,QAAU,OACzBlB,kBAAoB,CAAA,EAExB,CAAC"}